//plugins {
//    id 'org.springframework.boot' version '2.4.1'
//    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
//    id 'java'
//}
buildscript {

    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:${springDependencyManagementVersion}"
    }
}

allprojects {
    apply plugin:'java'
    apply plugin: 'maven'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.zqysama'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '1.8'

    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        maven {
            url 'http://ubuntu:8081/repository/maven-central/'
        }
        maven {
            url 'http://ubuntu:8081/repository/maven-releases/'
        }
        maven {
            url 'http://ubuntu:8081/repository/maven-snapshots/'
        }
        maven {
            url 'http://www.datanucleus.org/downloads/maven2/'
        }
        maven {
            url 'http://nexus.pentaho.org/content/groups/omni'
        }
        mavenCentral()
    }
    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-starter-parent:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom 'org.springframework.cloud:spring-cloud-alibaba-dependencies:0.9.0.RELEASE'
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {

        // lombok
        implementation 'org.projectlombok:lombok:1.18.4'

        implementation "org.springframework.boot:spring-boot-starter"
        implementation "org.springframework.boot:spring-boot-starter-jdbc"
        implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
        implementation "org.springframework.boot:spring-boot-starter-web"
        runtimeOnly 'mysql:mysql-connector-java'
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
        runtimeOnly 'org.springframework.boot:spring-boot-devtools'
        compile "org.springframework.boot:spring-boot-starter-data-redis"

    }

    task cleanBuildOutDir(type: Delete) {
        delete "${projectDir}/build"
        delete "${projectDir}/out"
    }
}

subprojects {

    group = 'com.zqysama'

    if (it.name.endsWith("-api") || it.name.endsWith("-impl") ) {
        dependencies {

            implementation 'org.springframework.boot:spring-boot-starter-validation'
            implementation 'com.alibaba:fastjson:1.2.72'

        }
    }


    if (it.name.endsWith("-client")) {
        dependencies {
            // client 依赖同名 api
            compile project(":$project.parent.name:$project.parent.name-api")
//            compile 'org.springframework.cloud:spring-cloud-starter-openfeign'
        }
    }

    if (it.name.endsWith("-impl")) {
        dependencies {
            // impl 依赖同名 api
            compile project(":$project.parent.name:$project.parent.name-api")
        }
    }
}

test {
    useJUnitPlatform()
}
